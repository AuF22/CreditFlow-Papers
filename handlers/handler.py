"""Данная часть кода ответсвенна по обработке протокола Кредитного Комитета"""
# +==========================================================+ #
#  GitHub:       https://github.com/AuF22                      #
#  LinkedIn:     https://www.instagram.com/mr_aseev14/         #
#  Instagram:    https://www.linkedin.com/in/altynbek-aseev/   #
#                       © AuF22                                #
# +==========================================================+ #
import openpyxl
from tkinter.filedialog import askopenfilename
from .request import LoanApplication
from typing import List


def start_handler() -> List[dict]:
    """
    Запускает обработчик протокола, ничего не принимает, кроме протокола
    который непосредственно пользователемс выбирается. В ответ получаем словарь
    с данными протокола

    Returns:
        List[dict]: Получаем список со всеми данными всловарях (заявки на кредит
        и слежебные записки)
    """
    # Создаем экземпляр класса, а так же собираем общие данные
    # ==============================================================================================================================
    cell = 3                                            # Стартовая ячейка (из-за структуры протокола)
    wb = openpyxl.load_workbook(askopenfilename())      # Создаем экземпляр класса который будем в дальнейшем полностью использовать
    sheet = wb.active                                   # Акстивный лист выбираем
    number_of_com = sheet['B1'].value.split(' ')[-1]    # Номер комитета (из-за структуры протокола)
    date = sheet['I2'].value.strip().split(' ')[1]      # Дата комитете (из-за структуры протокола)
    # ===============================================================================================================================
    
    print(type(sheet))
    
    # Собираем членов кредитного комитета
    # =========================================
    attended = []          # Участники комитета
    # Цикл собирающий перебором всех членов  КК
    while True:
        active_cell = sheet[f'D{cell}'].value
        if active_cell is None: # Останавливаем 
            break
        attended.append(active_cell)
        cell += 1          # Добавляем к ячейке
    # =========================================
    
    
    cell += 1 # Добавляем к ячейке
    # Бесконечный цикл перебирает уже сам протокол 
    # ===============================================================
    while True:
            # В данной точке выбирается обработчик Заявок/Служебок
            selection_point = str(sheet[f'E{cell}'].value).strip()
            
            
            # Обрабатывается заявки на кредит
            # ========================================================================================================================
            if selection_point == 'Цель в «Онлайн Банк»':
                a = LoanApplication(sheet=sheet, cell=cell) # Инициализация обработчика заявки
                a.handler()                                 # Метод обработчика 
                cell = a.cell                               # Обновляем ячейку
                print(a.request_dict)                       # Тут надо реализовать добавление к списку (Это не трудно но сделаю позже)
            # ========================================================================================================================
            
            
            # Обрабатывает служебные записки 
            # Я сейчас должен это все прописать и реализовать еще не начал
            # ==========================================
            elif selection_point == 'Служебная записка':
                # Обрабатываются служебки
                print("Сработал")
                cell += 1
            # ==========================================
            
            
            # Это уже конец обработчика и нужно реализовать возрат списка
            # С этим в конце еще поработаем, а так пока оставим
            # ===================================
            else:
                # Заканчивает работу обработчика
                print("все")
                break
            # ===================================
    # =================================================================


if __name__ == "__main__":
    start_handler()
